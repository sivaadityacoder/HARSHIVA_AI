FROM ubuntu:22.04

# Prevent interactive prompts during installation
ENV DEBIAN_FRONTEND=noninteractive

# Install system dependencies
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    python3-venv \
    wget \
    curl \
    git \
    unzip \
    gcc \
    g++ \
    cmake \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Install security tools
RUN wget -O /tmp/subfinder.tar.gz https://github.com/projectdiscovery/subfinder/releases/latest/download/subfinder_*_linux_amd64.tar.gz \
    && tar -xzf /tmp/subfinder.tar.gz -C /usr/local/bin/ subfinder \
    && chmod +x /usr/local/bin/subfinder

RUN wget -O /tmp/nuclei.tar.gz https://github.com/projectdiscovery/nuclei/releases/latest/download/nuclei_*_linux_amd64.tar.gz \
    && tar -xzf /tmp/nuclei.tar.gz -C /usr/local/bin/ nuclei \
    && chmod +x /usr/local/bin/nuclei

RUN wget -O /tmp/httpx.tar.gz https://github.com/projectdiscovery/httpx/releases/latest/download/httpx_*_linux_amd64.tar.gz \
    && tar -xzf /tmp/httpx.tar.gz -C /usr/local/bin/ httpx \
    && chmod +x /usr/local/bin/httpx

RUN wget -O /tmp/amass.zip https://github.com/owasp-amass/amass/releases/latest/download/amass_Linux_amd64.zip \
    && unzip /tmp/amass.zip -d /tmp/ \
    && mv /tmp/amass_Linux_amd64/amass /usr/local/bin/ \
    && chmod +x /usr/local/bin/amass

RUN wget -O /usr/local/bin/waybackurls https://github.com/tomnomnom/waybackurls/releases/latest/download/waybackurls-linux-amd64-* \
    && chmod +x /usr/local/bin/waybackurls

# Set up application directory
WORKDIR /app

# Copy requirements first for better caching
COPY requirements.txt .

# Create virtual environment and install Python dependencies
RUN python3 -m venv venv \
    && . venv/bin/activate \
    && pip install --upgrade pip \
    && pip install -r requirements.txt

# Copy application code
COPY . .

# Create output directory
RUN mkdir -p out

# Set environment variables
ENV PATH="/app/venv/bin:$PATH"
ENV PYTHONPATH="/app"

# Note: User must mount model directory and set LLM_MODEL_PATH
# Example: docker run -v $(pwd)/models:/app/models -e LLM_MODEL_PATH=/app/models/model.gguf

# Default command
ENTRYPOINT ["python", "agent/agent.py"]
CMD ["--help"]